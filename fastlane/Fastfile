# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

require 'yaml'

files_with_version_number = [
  './pubspec.yaml',
  './ios/purchases_flutter.podspec',
  './macos/purchases_flutter.podspec',
  './ios/Classes/PurchasesFlutterPlugin.m',
  './android/build.gradle',
  './android/src/main/java/com/revenuecat/purchases_flutter/PurchasesFlutterPlugin.java'
]
repo_name = 'purchases-flutter'
changelog_latest_path = './CHANGELOG-LATEST.md'
changelog_path = './CHANGELOG.md'

before_all do
  setup_circle_ci
  update_fastlane  
end

desc "Bump version, edit changelog, and create pull request"
lane :bump do |options|
  bump_version_update_changelog_create_pr(
    current_version: current_version_number,
    changelog_latest_path: changelog_latest_path,
    changelog_path: changelog_path,
    files_to_update: files_with_version_number,
    files_to_update_without_prerelease_modifiers: [],
    repo_name: repo_name,
    github_rate_limit: options[:github_rate_limit],
    branch: options[:branch],
    editor: options[:editor]
  )
end

desc "Builds and analyzes the api_tester project to make sure APIs are expected"
lane :run_api_tests do |options|
  check_api_tester_imports_up_to_date
  build_api_tester_apk
  analyze_api_tester
end

def current_version_number
  pubspec_location = "../pubspec.yaml"
  pubspec = YAML.load_file(pubspec_location)

  current_version = pubspec["version"]
  return current_version
end

def check_api_tester_imports_up_to_date
  api_test_files = Dir
    .glob("../api_tester/lib/api_tests/**/*.dart")
    .reject { |file_path| File.directory?(file_path) }
  import_file_lines = File.readlines("../api_tester/lib/api_tests_import.dart")
  api_test_files.each do |file_path|
    file_name = File.basename(file_path)
    unless import_file_lines.any? { |line| line.include?(file_name) }
      UI.user_error!("api_tester api_tests_import.dart is not up-to-date. Missing #{file_name}")
    end
  end
end

def build_api_tester_apk
  Dir.chdir("../api_tester") do
    sh("flutter", "build", "apk", "--debug")
  end
end

def analyze_api_tester
  Dir.chdir("../api_tester") do
    sh("flutter", "analyze")
  end
end
